{"version":3,"sources":["User/AddUser.js"],"names":["AddUser","props","setRole","role","setState","setUsername","event","username","target","value","setPassword","password","setConfirmPassword","confirmPassword","submit","a","state","console","log","sjcl","window","bitArray","hash","sha256","codec","hex","fromBits","fetch","method","headers","body","JSON","stringify","then","res","ok","message","error","text","json","err","msg","catch","alert","messsage","this","mx","style","marginTop","elevation","p","display","flexDirection","gap","variant","clear","label","onChange","helperText","autoComplete","width","InputLabelProps","shrink","type","component","marginLeft","marginRight","row","control","checked","color","onClick","React","Component"],"mappings":"kUAcqBA,E,kDAGjB,WAAYC,GACX,IAAD,8BACI,cAAMA,IAaVC,QAAU,SAACC,GACP,EAAKC,SAAS,CAACD,KAAMA,KAfzB,EAkBAE,YAAc,SAACC,GACX,EAAKF,SAAS,CAACG,SAAUD,EAAME,OAAOC,SAnB1C,EAsBAC,YAAc,SAACJ,GACX,EAAKF,SAAS,CAACO,SAAUL,EAAME,OAAOC,SAvB1C,EAyBAG,mBAAqB,SAACN,GAClB,EAAKF,SAAS,CAACS,gBAAiBP,EAAME,OAAOC,SA1BjD,EA8BAK,OA9BA,sBA8BS,gCAAAC,EAAA,yDAED,EAAKC,MAAMT,UAAa,EAAKS,MAAML,UAAgC,OAApB,EAAKK,MAAMb,MAAiB,EAAKa,MAAML,WAAa,EAAKK,MAAMH,gBAF7G,iDAOLI,QAAQC,IAAI,EAAKF,MAAML,UAEjBQ,EAAOC,OAAOD,KACdE,EAAWF,EAAKG,KAAKC,OAAOD,KAAK,EAAKN,MAAML,UAC5CA,EAAWQ,EAAKK,MAAMC,IAAIC,SAASL,GAEzCJ,QAAQC,IAAIP,GAGZgB,MAAM,eAAgB,CAElBC,OAAQ,OACRC,QAAQ,CACJ,eAAiB,oBAErBC,KAAMC,KAAKC,UAAU,CAAGzB,SAAU,EAAKS,MAAMT,SACrBI,SAAUA,EACVR,KAAM,EAAKa,MAAMb,SAE1C8B,MAAK,SAACC,GACFA,EAAIC,GAEH,EAAK/B,SAAS,CAAEG,SAAU,KACVI,SAAU,KACVR,KAAM,KACNU,gBAAiB,KACjBuB,QAAQ,CAACC,OAAO,EAAQC,KAAM,EAAKtB,MAAMT,SAAW,0BAGpE2B,EAAIK,OAAON,MAAK,SAACO,GAAD,OAAS,EAAKpC,SAAS,CAACgC,QAAS,CAACC,OAAO,EAAMC,KAAME,EAAIC,aAG9EC,OAAM,SAACF,GACNG,MAAMH,EAAIJ,YAxCT,2CA3BL,EAAKpB,MAAQ,CACTT,SAAU,KACVI,SAAU,KACVE,gBAAiB,KACjBV,KAAM,KACNyC,SAAU,MARlB,E,qDA2ES,IAAD,SAE0DC,KAAK7B,MAA5DT,EAFH,EAEGA,SAAUI,EAFb,EAEaA,SAAWE,EAFxB,EAEwBA,gBAAiBV,EAFzC,EAEyCA,KAAMiC,EAF/C,EAE+CA,QAEnD,OACI,cAAC,IAAD,CAAKU,GAAG,OAAOC,MAAO,CAACC,UAAW,QAAlC,SACI,cAAC,IAAD,CAAOC,UAAW,EAAlB,SACQ,eAAC,IAAD,CAAKC,EAAG,EAAGC,QAAQ,OAAOC,cAAc,SAASL,MAAO,CAACM,IAAK,IAA9D,UACI,cAAC,IAAD,CAAYC,QAAQ,KAApB,sBACClB,GAAW,cAAC,IAAD,CAASC,MAAOD,EAAQC,MAAQC,KAAMF,EAAQE,KAAMiB,MAAO,kBAAM,EAAKnD,SAAS,CAACgC,QAAS,UACrG,cAAC,IAAD,CACIC,OAAS9B,EACTiD,MAAM,WACN/C,MAAQF,GAAsB,GAC9BkD,SAAUZ,KAAKxC,YACfqD,WAAcnD,EAAuC,GAA3B,0BAC1B+C,QAAQ,WACRK,aAAa,MACbZ,MAAO,CAACa,MAAO,KACfC,gBAAiB,CAACC,QAAQ,KAE9B,cAAC,IAAD,CACIzB,OAAS1B,EACT6C,MAAM,WACNC,SAAUZ,KAAKnC,YACfD,MAAQE,GAAsB,GAC9B+C,WAAc/C,EAAwC,GAA5B,0BAC1B2C,QAAQ,WACRS,KAAK,WACLJ,aAAa,MACbZ,MAAO,CAACa,MAAO,KACfC,gBAAiB,CAACC,QAAQ,KAE7B,cAAC,IAAD,CACGzB,MAAQxB,IAAoBF,IAAaE,EACzCJ,MAAQI,GAAqC,GAC7C4C,SAAUZ,KAAKjC,mBACf4C,MAAM,mBACNE,WAAa7C,IAAoBF,GAAaE,EAA6C,GAAzB,uBAClEyC,QAAQ,WACRS,KAAK,WACLJ,aAAa,MACbZ,MAAO,CAACa,MAAO,KACfC,gBAAiB,CAACC,QAAQ,KAE7B,cAAC,IAAD,CAAaE,UAAU,WAAWjB,MAAO,CAACkB,WAAY,OAAQC,YAAa,QAA3E,SACG,eAAC,IAAD,CAAWC,KAAG,EAAd,UACI,cAAC,IAAD,CACIC,QAAS,cAAC,IAAD,CAAUC,QAAmB,IAATlE,EAA4BsD,SAAU,kBAAM,EAAKvD,QAAQ,MACtFsD,MAAM,UAEV,cAAC,IAAD,CACIY,QAAS,cAAC,IAAD,CAAUC,QAAmB,IAATlE,EAA4BsD,SAAU,kBAAM,EAAKvD,QAAQ,MACtFsD,MAAM,cAIlB,cAAC,IAAD,CAAQF,QAAQ,YAAYgB,MAAM,UAAUC,QAAS1B,KAAK/B,OAA1D,+B,UAxIS0D,EAAMC","file":"static/js/13.75a6acbc.chunk.js","sourcesContent":["import Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Message} from \"../Common/Message\";\nimport React from \"react\";\n\n\n\nexport default class AddUser extends React.Component\n{\n\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            username: null,\n            password: null,\n            confirmPassword: null,\n            role: null,\n            messsage: null,\n            \n        };\n    }\n\n\n    setRole = (role) => {\n        this.setState({role: role});\n    }\n\n    setUsername = (event) => {\n        this.setState({username: event.target.value});\n    }\n\n    setPassword = (event) => {\n        this.setState({password: event.target.value});\n    }\n    setConfirmPassword = (event) => {\n        this.setState({confirmPassword: event.target.value});\n    }\n\n\n    submit = async() => {\n        \n        if(!this.state.username || !this.state.password || this.state.role === null || this.state.password !== this.state.confirmPassword)\n        {\n            return;\n        }\n\n        console.log(this.state.password);\n\n        const sjcl = window.sjcl;\n        const bitArray = sjcl.hash.sha256.hash(this.state.password);\n        const password = sjcl.codec.hex.fromBits(bitArray);   \n\n        console.log(password);\n\n\n        fetch(\"/user/signup\", {\n\n            method: \"POST\",\n            headers:{\n                \"Content-Type\" : \"application/json\",\n            },\n            body: JSON.stringify({  username: this.state.username, \n                                    password: password, \n                                    role: this.state.role})\n\n        }).then((res) => {\n            if(res.ok)\n            {\n                this.setState({ username: null,\n                                password: null,\n                                role: null,\n                                confirmPassword: null,\n                                message:{error: false , text: this.state.username + \" succesfully created\"}});     \n            }\n            else{\n                res.json().then((err) => this.setState({message: {error: true, text: err.msg}}));\n            }\n\n        }).catch((err) => {\n            alert(err.message);\n        })\n\n    } \n    \n    render(){  \n\n        const {username, password,  confirmPassword ,role, message} = this.state;\n\n        return(\n            <Box mx=\"auto\" style={{marginTop: \"25vh\"}}>\n                <Paper elevation={2}>\n                        <Box p={6} display=\"flex\" flexDirection=\"column\" style={{gap: 23}}>\n                            <Typography variant=\"h6\">Add User</Typography>\n                            {message && <Message error={message.error}  text={message.text} clear={() => this.setState({message: null})}/>}\n                            <TextField\n                                error={(!username) ? true: false}\n                                label=\"Username\"\n                                value={(username) ? username: \"\"}\n                                onChange={this.setUsername}\n                                helperText={(!username) ? \"Please enter a username\": \"\"}\n                                variant=\"outlined\"\n                                autoComplete=\"off\"\n                                style={{width: 300}}\n                                InputLabelProps={{shrink: true}}\n                            />\n                            <TextField\n                                error={(!password) ? true: false}\n                                label=\"Password\"\n                                onChange={this.setPassword}\n                                value={(password) ? password: \"\"}\n                                helperText={(!password) ? \"Please enter a password\" : \"\"}\n                                variant=\"outlined\"\n                                type=\"password\"\n                                autoComplete=\"off\"\n                                style={{width: 300}}\n                                InputLabelProps={{shrink: true}}\n                            />\n                             <TextField\n                                error={(confirmPassword !== password || !confirmPassword) ? true: false}\n                                value={(confirmPassword) ? confirmPassword : \"\"}\n                                onChange={this.setConfirmPassword}\n                                label=\"Confirm Password\"\n                                helperText={(confirmPassword !== password || !confirmPassword ) ? \"passwords dont match\" : \"\"}\n                                variant=\"outlined\"\n                                type=\"password\"\n                                autoComplete=\"off\"\n                                style={{width: 300}}\n                                InputLabelProps={{shrink: true}}\n                            />\n                             <FormControl component=\"fieldset\" style={{marginLeft: \"auto\", marginRight: \"auto\"}}>\n                                <FormGroup row>\n                                    <FormControlLabel\n                                        control={<Checkbox checked={(role === 0) ? true : false} onChange={() => this.setRole(0)}/>}\n                                        label=\"Admin\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox checked={(role === 1) ? true : false} onChange={() => this.setRole(1)}/>}\n                                        label=\"User\"\n                                    />\n                                </FormGroup>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.submit}>\n                                Submit\n                            </Button>\n\n            \n                        </Box>\n                </Paper>\n            </Box>\n\n        );\n    }\n}"],"sourceRoot":""}