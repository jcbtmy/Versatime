{"version":3,"sources":["Common/Message.js","Logo-Alone.ico","NavBar.js","Dashboard/Dashboard.js","VersaTime.js","reportWebVitals.js","index.js","Common/Display.js","Common/Recent.js","Text.js"],"names":["useStyles","makeStyles","root","display","gap","padding","width","position","bottom","left","marginTop","marginBotton","alignItems","success","backgroundColor","error","text","color","Message","props","classes","messageClassType","elevation","className","style","size","onClick","clear","marginLeft","theme","menuBar","flexGrow","flexDirection","paddingTop","overflowY","zIndex","positon","height","overflowX","appBar","menuItem","textAlign","userSelect","linkStyle","textDecoration","toolBar","currentRoute","img","widht","maxHeight","maxWidth","transitionContainer","alignSelf","item","fontSize","userMenu","right","brandLink","justifyContent","Logo","src","logo","alt","BrandLink","Box","to","MenuBar","useState","page","changePage","Slide","direction","in","isOpen","Paper","routes","map","route","i","focusRoute","e","update","path","MenuItem","icon","UserMenu","menuAnchor","setMenuAnchor","handleClick","event","fetch","method","redirect","then","res","redirected","window","location","href","url","catch","err","NavBar","AppBar","IconButton","edge","aria-label","handleMenuButton","Dashboard","fetchRMARecent","a","ok","json","setState","message","msg","rmas","recentRmas","fetchOrderRecent","orders","recentOrders","fetchSerialRecent","serials","recentSerials","state","this","user","customers","products","Display","Typography","variant","username","Recent","customer","find","c","_id","customerId","date","Date","orderDate","Button","textTransform","pathname","orderNumber","customerName","getMonth","getDay","getFullYear","RMADate","RMANumber","serialNumber","product","productId","productName","React","Component","OrdersDisplay","lazy","SerialDisplay","RMADisplay","ShippingDisplay","CustomerDisplay","AddUser","Routes","VersaApp","updateCustomers","prevState","updateOrders","order","updateRMA","rma","updateSerials","serial","getUser","console","log","toString","fetchRMAs","fetchCustomers","status","fetchProducts","fetchOrders","fetchSerials","menuOpen","fallback","marginRight","CircularProgress","exact","render","updateRoot","onUpdate","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","pageContent","displayContainer","border","children","DisplayContainer","Root","Page","DisplayItem","flexWrap","child","contents","margin","title","paddingLeft","paddingBottom","RecentItem","Children","Text","addClass","Title"],"mappings":"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","file":"static/js/main.823c2129.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport Paper from \"@material-ui/core/Paper\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {Text} from \"../Text\";\nimport { Fade } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: \"flex\",\n        gap: 15,\n        padding: 15,\n        width: \"auto\",\n        position: \"fixed\",\n        bottom: 25,\n        left: 25,\n        marginTop: 5,\n        marginBotton: 20,\n        alignItems: \"center\",\n    },\n\n    success : {\n        backgroundColor: \"#357a38\",\n    },\n\n    error : {\n        alignItems:\"center\",\n        backgroundColor: \"red\",\n    },\n    text: {\n        alignItems:\"center\",\n        color: \"white\"\n    }\n}));\n\n\nexport const Message = (props) => {\n\n    const classes = useStyles();\n    const messageClassType = (props.error) ? `${classes.root} ${classes.error}` : `${classes.root} ${classes.success}`;\n\n    return(    \n                <Paper elevation={1} className={messageClassType}>\n                    {\n                        props.error && <ClearIcon style={{color:\"white\"}} />\n                    }\n                    {\n                        !props.error && <DoneIcon style={{color:\"white\"}}/>\n                    }\n                    <Text className={classes.text}>{props.text}</Text>\n\n                    <IconButton size=\"small\" onClick={props.clear}>\n                        <ClearIcon style={{marginLeft: \"auto\", color: \"#E0E0E0\"}}/>\n                    </IconButton>\n                </Paper>\n    );\n}","export default __webpack_public_path__ + \"static/media/Logo-Alone.2a89a103.ico\";","import \"./css/NavBar.css\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\";\nimport React from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Box from \"@material-ui/core/Box\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Title, Text } from \"./Text\";\nimport {Link, NavLink } from \"react-router-dom\";\nimport logo from \"./Logo-Alone.ico\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Slide from '@material-ui/core/Slide';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n   \n    menuBar: {\n        flexGrow: 1,\n        display: \"flex\",\n        flexDirection:\"column\",\n        paddingTop: 75,\n        padding: 15,\n        overflowY: \"hidden\",\n        zIndex: 10,\n        gap:1,\n        backgroundColor: \"white\",\n        positon: \"relative\",\n        width: \"auto\",\n        height: \"100%\",\n        overflowX: \"hidden\",\n    },\n    appBar: {\n        display: \"flex\",\n        backgroundColor: \"#36435c\",\n        zIndex: 11,\n    },\n\n    menuItem: {\n        textAlign: \"left\",\n        userSelect: \"none\",\n        padding: \"2px\",\n        width: \"100%\",\n        \n    },\n    linkStyle: {\n        textDecoration: \"none\",\n        color:\"black\",\n        width: \"100%\", \n        height: \"100%\"\n    },\n    toolBar : {\n        display: \"flex\",\n        gap: 10,\n    },\n    currentRoute : {\n        backgroundColor: '#c9c9c9',\n        width: \"100%\",\n    },\n\n    img : {\n        height: 48,\n        width: 48,\n        \"& img\":{\n            height:\"auto\",\n            widht: \"auto\",\n            maxHeight: \"100%\",\n            maxWidth: \"100%\",\n        }\n\n    },\n    transitionContainer : { \n        display: \"flex\",\n        zIndex: 1,\n        flexGrow: 1,\n        width: \"auto\",\n        position:\"fixed\",\n        alignSelf: \"stretch\",\n    },\n\n    item : {\n        fontSize: 18,\n        display: \"flex\",\n        gap: 5,\n    },\n\n    userMenu:{\n        position:\"absolute\",\n        zIndex: 11,\n        right: 20,\n    },\n\n    brandLink :{\n        textDecoration: \"none\",\n        display: \"flex\", \n        gap: 15, \n        alignItems: \"center\",\n        justifyContent:\"center\",\n        color: \"white\",\n    }\n}));\n\nconst Logo = (props) => {\n\n    const classes = useStyles();\n\n    return(\n       \n            <div className={classes.img}>\n                <img src={logo} alt=\"Logo\"/>\n            </div>\n    );\n};\n\n\nconst BrandLink = (props) => {\n    const classes = useStyles();\n\n    return(\n        <Box width={1} >\n            <Link to=\"/\" className={classes.brandLink}>\n                <Logo />\n                <Title>VersaTime</Title>\n            </Link>\n        </Box>\n    );\n}\n\nexport const MenuBar = (props) => {\n\n    const classes = useStyles();\n    const [page, changePage] = useState();\n\n    const update = (i) => {\n        changePage(i);\n    };\n\n    const mapRoutes = (route, i ) => {\n\n        const focusRoute = (i == page) ? classes.currentRoute : \"\";\n        return(\n            <div    key={i} \n                    onClick={(e) => update(i)} \n                    className={classes.menuItem}\n                    >\n                    <Link to={route.path} className={classes.linkStyle}>\n                        <MenuItem className={classes.item + ' ' + focusRoute}>{route.icon} {route.text}</MenuItem>\n                    </Link>\n            </div>\n        );\n    };\n\n    return (\n        <div className={classes.transitionContainer}>\n           <Slide direction=\"right\" in={props.isOpen}>\n                <Paper className={classes.menuBar}>\n                        {\n                            props.routes.map(mapRoutes)\n                        }\n                </Paper>\n            </Slide>\n        </div>\n    );\n}\n\nfunction UserMenu(props){\n\n    const [menuAnchor, setMenuAnchor] = useState(false);\n    const classes = useStyles();\n\n    const handleClick = (event) => {\n        setMenuAnchor(!menuAnchor);\n    }\n\n    const logout = () => {\n        fetch(\"/user/logout\", {method: \"POST\", redirect: \"follow\"})\n        .then((res) => {\n            if(res.redirected)\n            {\n                window.location.href = res.url;\n            }\n        })\n        .catch((err) => {});\n    }\n\n\n    return(\n        <div>\n            <AccountCircleIcon fontSize=\"large\" onClick={handleClick}/>\n            { menuAnchor && \n                <Paper className={classes.userMenu}>\n                    <Link to=\"/addUser\" className={classes.linkStyle}>\n                         <MenuItem onClick={handleClick}>Add User</MenuItem>\n                    </Link>\n                    <Link to=\"/myAccount\" className={classes.linkStyle}>\n                        <MenuItem onClick={handleClick}>My Account</MenuItem>\n                    </Link>\n                    <MenuItem onClick={logout}>Logout</MenuItem>\n                </Paper>\n            }\n        </div>\n    );\n}\n\n\nexport const NavBar = (props) => {\n\n    const classes = useStyles();\n\n    return (\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <ToolBar className={classes.toolBar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={props.handleMenuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <BrandLink />\n                    <UserMenu />\n                </ToolBar>\n            </AppBar>  \n    );\n\n}\n\n\n","import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\n\nimport {Recent, RecentItem} from \"../Common/Recent\";\nimport { Message } from \"../Common/Message\";\nimport { Display, DisplayItem } from \"../Common/Display\";\n\n\n\n\nexport default class Dashboard extends React.Component{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            recentRmas: null,\n            recentOrders: null,\n            recentSerials: null,\n\n            message: null,\n\n        }\n    }\n\n    componentDidMount(){\n        this.fetchOrderRecent();\n        this.fetchSerialRecent();\n        this.fetchRMARecent();\n    }\n\n    fetchRMARecent = async() =>{\n        fetch(\"/api/rmas/recent/6\")\n            .then((res) => {\n                if(res.ok)\n                {\n                    return res.json();\n                }\n\n                res.json().then((err) => this.setState({message: {text: err.msg, error: true}}));\n            })\n            .then((rmas) => {\n\n                if(!rmas){return;}\n\n                this.setState({recentRmas: rmas});\n            })\n            .catch((err) => {\n                this.setState({message: {error: true, text: err.message}});\n            });\n    }\n\n    fetchOrderRecent = async() =>{\n        fetch(\"/api/orders/recent/6\")\n            .then((res) => {\n                if(res.ok)\n                {\n                    return res.json();\n                }\n\n                res.json().then((err) => this.setState({message: {error: true, text: err.msg}}));\n            })\n            .then((orders) => {\n                \n                if(!orders){return;}\n\n                this.setState({recentOrders: orders});\n            })\n            .catch((err) => {\n                this.setState({message: {error: true, text: err.msg}});\n            });\n    }\n\n    fetchSerialRecent = async() => {\n        fetch(\"/api/serials/recent/6\")\n        .then((res) => {\n            if(res.ok)\n            {\n                return res.json();\n            }\n\n            res.json().then((err) => this.setState({message: {error: true, text: err.msg}}));\n        })\n        .then((serials) => {\n            \n            if(!serials){return;}\n\n            this.setState({recentSerials: serials});\n        })\n        .catch((err) => {\n            this.setState({message: {error: true, text: err.msg}});\n        });\n    }\n\n    render(){\n\n        const {recentSerials, recentOrders, recentRmas} = this.state;\n        const {user, customers, products} = this.props;\n\n        return(\n            <Display>\n                {user &&  <Typography variant=\"h5\">Hello {user.username}!</Typography>}\n                {   recentOrders && \n                     <DisplayItem>\n                     <Typography variant=\"h5\">Recent Orders</Typography>\n                     <Recent>\n                       {\n                         recentOrders.map((item) => {\n   \n                           const customer = customers.find((c) => c._id === item.customerId);\n                           const date = new Date(item.orderDate);\n   \n                           return (\n                                   <Button style={{textTransform: \"none\"}} >\n                                       <Link style={{textDecoration: \"none\"}} \n                                            to={{\n                                                pathname:\"/SalesOrders\",\n                                                state:{\n                                                    orderNumber: item.orderNumber,\n                                                }\n                                            }}\n                                       >\n                                        <RecentItem>\n                                                    {[  \"Order: \" + item.orderNumber, \n                                                        customer.customerName, \n                                                        \"\" + date.getMonth() + \"/\" + date.getDay() + \"/\"+ date.getFullYear(),\n                                                    ]}\n                                        </RecentItem>\n                                        </Link>\n                                   </Button>\n                                \n                           );\n                         })\n                       }\n                     </Recent>\n                   </DisplayItem>\n                }\n                {   recentRmas && \n                    <DisplayItem>\n                         <Typography variant=\"h5\">Recent RMAs</Typography>\n                         <Recent>\n                            {\n                                recentRmas.map((item) => {\n                                    const customer = customers.find((c) => c._id === item.customerId);\n                                    const date = new Date(item.RMADate);\n            \n                                    return (\n                                        <Button style={{textTransform: \"none\"}}>\n                                            <Link style={{textDecoration: \"none\"}} \n                                                to={{\n                                                    pathname:\"/RMAs\",\n                                                    state:{\n                                                        RMANumber: item.RMANumber,\n                                                    }\n                                                }}\n                                            >  \n                                                <RecentItem>\n                                                    {[\n                                                        \"RMANumber \" + item.RMANumber, \n                                                        customer.customerName, \n                                                        \"\" + date.getMonth() + \"/\" + date.getDay() + \"/\"+ date.getFullYear(),\n                                                    ]}\n                                                </RecentItem>                                       \n                                            </Link>\n                                        </Button>\n                                    );\n                                })\n                            }\n                        </Recent>\n                    </DisplayItem>\n\n                }\n                {\n                    recentSerials &&\n                    <DisplayItem>\n                        <Typography variant=\"h5\">Recent Serials</Typography>\n                        <Recent>\n                            {\n                                recentSerials.map((item, i) => {\n\n                                    return(\n                                        <Button style={{textTransform: \"none\"}} >\n                                             <Link style={{textDecoration: \"none\"}} \n                                                to={{\n                                                    pathname:\"/SerialNumbers\",\n                                                    state:{\n                                                        RMANumber: item.serialNumber,\n                                                    }\n                                                }}\n                                            >\n                                                  <RecentItem>{[\n                                                    \"SN: \" + item.serialNumber,\n                                                    customers.find((customer) => customer._id === item.customerId).customerName,\n                                                    products.find((product) => product.productId ===item.productId).productName,\n                                                ]}\n                                                </RecentItem>\n                                \n                                            </Link>\n                                        </Button>\n                                    );\n                                })\n                            }\n                        </Recent>\n                    </DisplayItem>\n                }\n\n            </Display>\n        );\n    }\n}","import React, { Suspense } from 'react';\nimport { NavBar, MenuBar } from \"./NavBar\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport DevicesOtherIcon from '@material-ui/icons/DevicesOther';\nimport BuildIcon from '@material-ui/icons/Build';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport GroupIcon from '@material-ui/icons/Group';\nimport {Root, DisplayContainer, Page} from \"./Common/Display\";\nimport Dashboard  from './Dashboard/Dashboard';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nconst OrdersDisplay = React.lazy(() => import(\"./Orders/OrdersDisplay\"));\nconst SerialDisplay = React.lazy(() => import(\"./Serials/SerialsDisplay\"));\nconst RMADisplay = React.lazy(() => import(\"./RMA/RMADisplay\"));\nconst ShippingDisplay = React.lazy(() => import(\"./Shipping/ShippingDisplay\"));\nconst CustomerDisplay = React.lazy(() => import(\"./Customers/CustomerDisplay\"));\nconst AddUser  = React.lazy(() => import(\"./User/AddUser\"));\n\nconst Routes = [\n  { path: \"/SalesOrders\", text: \"Sales Orders\", icon: <AssignmentIcon fontSize=\"large\" /> },\n  { path: \"/SerialNumbers\", text: \"Serial Numbers\", icon: <DevicesOtherIcon fontSize=\"large\" /> },\n  { path: \"/RMAs\", text: \"RMA\", icon: <BuildIcon fontSize=\"large\" /> },\n  { path: \"/Shipping\", text: \"Shipping\", icon: <LocalShippingIcon fontSize=\"large\" /> },\n  { path: \"/Customers\", text: \"Customers\", icon: <GroupIcon fontSize=\"large\" /> },\n];\n\n\nexport default class VersaApp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers : null,\n      products: null,\n      orders: null,\n      serials: null,\n      rmas: null,\n      user: null,\n\n      menuOpen: true,\n\n      error: null,\n    };\n\n  }\n\n  componentDidMount() {\n    this.getUser();\n    this.fetchCustomers();\n    this.fetchProducts();\n    this.fetchOrders();\n    this.fetchSerials();\n    this.fetchRMAs();\n  }\n\n\n  updateCustomers = (customer) => {\n      this.setState((prevState) => ({customers: [...prevState.customers, customer] }));\n  }\n\n  updateOrders = (order) => {\n      this.setState((prevState) =>({orders: [...prevState.orders, order]}));\n  }\n\n  updateRMA = (rma) => {\n      this.setState((prevState) => ({rmas: [...prevState.rmas, rma]}));\n  }\n\n  updateSerials = (serial) => {\n      this.setState((prevState) => ({serials: [...prevState.serials, serial]}));\n  }\n\n  getUser = () => {\n     fetch(\"/user/userInfo\")\n      .then((res) => {\n        if(res.ok)\n        {\n          return res.json();\n        }\n\n        console.log(res);\n      })\n      .then((user) => {\n        if(!user){return;}\n\n        this.setState({user: user});\n      })\n      .catch((error) => console.log(error.toString()));\n  }\n\n  fetchRMAs = async() => {\n\n      fetch(\"/api/rmas\")\n        .then((res) => {\n            if(res.ok)\n            {\n              return res.json();\n            }\n            else{\n              this.setState({error: {message: \"Error Loading RMAs\"}});\n            }\n        })\n        .then((res) => this.setState({rmas: res}))\n        .catch( error => this.setState({error}))\n\n  }\n  fetchCustomers = async () => {\n  \n    fetch(\"/api/customers\")\n      .then(res => {\n        if (res.status === 200) {\n          return res.json();\n        }\n        else{\n            this.setState({ error: {message: \"Error Loading Customers\"}});\n        }\n      })\n      .then(customers => this.setState({customers: customers}))\n      .catch(error => this.setState({ error }));\n  }\n\n  fetchProducts = async () => {\n   \n    fetch(\"/api/products\")\n    .then( res => {\n        if (res.status === 200) {\n          return res.json();\n        }\n        else{\n          this.setState({ error: {message: \"Error Loading Products\"}});\n        }\n      })\n    .then(products => this.setState({products: products}))\n    .catch(error => this.setState({error}));\n  }\n\n\n  fetchOrders = async () => {\n    fetch(\"/api/orders\")\n      .then(res => {\n        if (res.status === 200) {\n          return res.json();\n        }\n        else{\n          this.setState({error: {message: \"Error Loading Orders\"}})\n        }\n      })\n      .then( orders => this.setState({orders: orders}))\n      .catch(error => this.setState({error}));\n  }\n\n  fetchSerials = async () => {\n    fetch(\"/api/serials\")\n      .then(res => {\n        if(res.status === 200)\n        {\n          return res.json();\n        }\n        else{\n          this.setState(\"Error Loading Serials\");\n        }\n      })\n      .then( serials => this.setState({serials: serials}))\n      .catch(error => this.setState({error}));\n  }\n\n  handleMenuButton = () => {\n    this.setState((prevState) => ({ menuOpen: !prevState.menuOpen }));\n  }\n\n  render() {\n    const { menuOpen,\n            customers, \n            error, \n            products, \n            orders,\n            serials,\n            user,\n            rmas,\n\n    } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <Router>\n        <Root>\n          <NavBar handleMenuButton={this.handleMenuButton} />\n          <MenuBar isOpen={menuOpen} routes={Routes} />\n          <Suspense fallback={<div>Loading</div>}>\n            <Switch>\n              <Page>\n                  { (!customers || !serials || !orders || !products || !rmas || !user) && \n\n                    <Box display=\"flex\" flexDirection=\"column\" \n                      style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: 150, alignItems: \"center\", gap: 20}}\n                    >\n                      <Typography>Loading</Typography>\n                      <CircularProgress size={150}/>\n                    </Box>\n                  }\n                <DisplayContainer>\n                  {error && <div style={{paddingTop: 200}}>{error.message}</div>}\n                  {customers && serials && orders && products && rmas && user &&  \n                      <>\n                      <Route exact path=\"/\" >\n                          <Dashboard  user={user}\n                                      customers={customers}\n                                      products={products}\n                          />\n                      </Route>\n                      <Route  path=\"/SalesOrders\"\n                              render={ (props) => <OrdersDisplay  {...props}\n                                                                  order={props.order}\n                                                                  orders={orders}\n                                                                  products={products}\n                                                                  customers={customers}\n                                                                  updateOrders={this.updateOrders}\n                                                                  updateSerials={this.updateSerials}\n                                                                  />\n                              }\n                        />\n                      <Route  path=\"/SerialNumbers\"\n                              render={ (props) =>  <SerialDisplay   {...props}\n                                                                    products={products}\n                                                                    serials={serials}\n                                                                    customers={customers}\n                                                                    orders={orders}\n                                                                    rmas={rmas}\n                                                                    updateRoot={this.updateSerials}\n                                                    />\n                              }\n                      />\n                      <Route  path=\"/RMAs\"\n                              render={ (props) =>  <RMADisplay {...props}\n                                                              updateRoot={this.updateRMA}\n                                                              customers={customers}\n                                                              products={products}\n                                                              serials={serials}\n                                                              rmas={rmas}\n                                                    />\n                            }\n                      />\n\n                      <Route path=\"/Shipping\"\n                            render={(props) => <ShippingDisplay   {...props}\n                                                                  customers={customers}\n                                                                  products={products}\n                                                                  serials={serials}\n                                                                  orders={orders}\n                                                                  rmas={rmas}\n                                                />\n                            }\n                      />\n\n                      <Route  path=\"/Customers\"\n                              render={(props) => <CustomerDisplay {...props}\n                                                                  customers={customers}\n                                                                  onUpdate={this.updateCustomers}\n                                                  />\n                              }\n\n                      />\n                      </>\n                  \n                }\n                </DisplayContainer>\n                <Route path=\"/addUser\" component={AddUser}/>\n              </Page>\n            </Switch>\n          </Suspense>\n        </Root>\n      </Router>\n    );\n  }\n\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport VersaTime from './VersaTime';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <VersaTime />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\nimport { makeStyles} from \"@material-ui/core\";\nimport Box from '@material-ui/core/Box';\n\n\n\nconst useStyles = makeStyles(() => ({\n    \n    display: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection:\"column\",\n            alignItems: \"middle\",\n            paddingTop: 60,\n            flexGrow: 1,\n            gap: 40,\n    },\n    pageContent: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems:\"center\",\n            justifyContent: \"center\",\n    },\n    page: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    root: {\n        flexGrow: 1,\n    },\n    displayContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexGrow: 1,\n        backgroundColor: \"white\",\n        position: \"absolute\",\n        maxWidth: 900,\n        zIndex: 0,\n        padding: \"30px 50px 30px 50px\",\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n        left:0,\n        right:0,\n        border: \"1px solid #E0E0E0\",\n        height: \"auto\",\n    },\n}));\n\n\n\nexport function Display(props){\n    const classes = useStyles();\n    return(\n        <div className={classes.display}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function ContentDisplay(props){\n    const classes = useStyles();\n    return (\n        <div className={classes.pageContent}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function DisplayContainer(props){\n    const classes = useStyles();\n\n    return(\n        <div className={classes.displayContainer}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function Root(props){\n    const classes = useStyles();\n    return(\n        <div className={classes.root}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function Page(props){\n    const classes = useStyles();\n\n    return(\n        <div className={classes.page}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function DisplayItem(props){\n    return(\n        <Box display=\"flex\" flexDirection=\"column\" style={{gap: 15}}>\n            {props.children}\n        </Box>\n    );\n}","import { FormHelperText, makeStyles, Typography } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport React from 'react';\nimport Box from \"@material-ui/core/Box\";\n\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display:\"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        gap: 15,\n    },\n    child: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: 250,\n        height: 120,\n    },\n\n    contents: {\n        display:\"flex\",\n        flexDirection:\"row\",\n        flexWrap: \"wrap\",\n        gap: 7,\n        margin: 10,\n    },\n\n    text: {\n        fontSize: 15,\n        color: \"gray\",\n    },\n\n    title : {\n        backgroundColor: \"#eceef7\",\n        paddingTop: 8,\n        paddingLeft: 8,\n        paddingBottom: 8,\n        display:\"flex\",\n        color: \"#3f51b5\",\n    }\n}));\n\nexport function RecentItem(props){\n    const classes = useStyles();\n\n    return(\n        <Paper className={classes.child} elevation={2} width={1}>\n            <Box className={classes.title}>\n                <b>{props.children[0]}</b>\n            </Box>\n            <Box className={classes.contents} width={1}>\n                {\n                    React.Children.map(props.children, (child, i) => {\n                            return (i > 0) ? <Typography className={classes.text} key={i}>{child}</Typography> : null;\n                    })\n                }\n            </Box>\n        </Paper>\n    );\n}\n\n\n\nexport function Recent(props){\n    const classes = useStyles();\n    return(\n        <Box className={classes.root} width={1}>\n          {\n            props.children\n          }\n        </Box>\n    )\n}","import  Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    title : {\n        flexGrow:1,\n        userSelect:\"none\",\n    },\n    text : {\n        flexGrow: 1,\n    },\n}));\n\nexport const Text = (props) =>{\n    const classes = useStyles();\n    const addClass = (props.className) ? \" \" + props.className : \"\";\n    return (\n        <Typography variant=\"body1\" className={classes.text + addClass}>\n          {props.children}\n        </Typography>\n    );\n}\n\nexport const Title = (props) => {\n    const classes = useStyles();\n    const variant = (props.variant) ? props.variant : \"h6\";\n    const addClass = (props.className) ? \" \"  + props.className : \"\";\n\n    return (\n        <Typography variant={variant} className={classes.title + addClass}>\n          {props.children}\n        </Typography>\n    );\n}\n  \n\n"],"sourceRoot":""}